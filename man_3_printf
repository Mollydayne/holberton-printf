.Dt novembre 2024      
.Sh NAME                
.Nm _printf
.Nd
.Sh SYNOPSIS             
.Nm int _printf(const char *format, ...)
.Sh DESCRIPTION         
Our _printf function is a custom version of the standard printf function.
.Pp
.Pp 
It shows formatted stdout, according to the format string, wich is the first argument we give to the function, followed by a number. The number is a variable argument. 

The format string contains regular characters (like for exemple 'A') and conversion specifiers, wich are identified by a %. These specifiers indicates how the arguments should be displayed in the stdout.

.Sh Supported Conversion Specifiers:

.Pp
%c : Prints a single character. 
.Pp 
%s : Prints a null-terminated string.
.Pp 
%d : Prints a signed decimal integer.
.Pp
%i : Prints a signed decimal integer (same as %d).
.Pp
%% : Prints a literal % character.


.El                      \" Ends the list
.Pp

.Sh Examples          

.Nm For a character :
.Pp
_printf("Character: %c\n", 'A');
.Pp
.Nm The output will be :
.Pp
Character: A
.Pp
.Nm And for printing integers :
.Pp
_printf("Integer: %d, Signed: %i\n", 42, -42);
.Pp
.Nm The output will be : 
.Pp
Integer: 42, Signed: -42


.El                      

.Sh Authors
.
This fantastic function was written and designed by Clarisse Perez and Karim Habouchi in november 2024.
